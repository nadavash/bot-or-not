// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        v3.11.4
// source: messages.proto

package message

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type MessageType int32

const (
	MessageType_SERVER_CONNECTION_SUCCESS MessageType = 0
	MessageType_ROOM_CONNECTION_SUCCESS   MessageType = 1
	MessageType_CHAT                      MessageType = 2
	MessageType_GAME_OVER                 MessageType = 3
	MessageType_BOT_OR_NOT                MessageType = 4
	MessageType_PLAY_AGAIN                MessageType = 5
	MessageType_ANSWER_CORRECT            MessageType = 6
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "SERVER_CONNECTION_SUCCESS",
		1: "ROOM_CONNECTION_SUCCESS",
		2: "CHAT",
		3: "GAME_OVER",
		4: "BOT_OR_NOT",
		5: "PLAY_AGAIN",
		6: "ANSWER_CORRECT",
	}
	MessageType_value = map[string]int32{
		"SERVER_CONNECTION_SUCCESS": 0,
		"ROOM_CONNECTION_SUCCESS":   1,
		"CHAT":                      2,
		"GAME_OVER":                 3,
		"BOT_OR_NOT":                4,
		"PLAY_AGAIN":                5,
		"ANSWER_CORRECT":            6,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

type WrapperMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageType MessageType `protobuf:"varint,1,opt,name=message_type,json=messageType,proto3,enum=message.MessageType" json:"message_type,omitempty"`
	// Types that are assignable to Message:
	//	*WrapperMessage_ServerSuccess
	//	*WrapperMessage_RoomSuccess
	//	*WrapperMessage_Chat
	//	*WrapperMessage_GameOver
	//	*WrapperMessage_BotOrNot
	//	*WrapperMessage_PlayAgain
	//	*WrapperMessage_AnswerCorrect
	Message isWrapperMessage_Message `protobuf_oneof:"message"`
}

func (x *WrapperMessage) Reset() {
	*x = WrapperMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WrapperMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WrapperMessage) ProtoMessage() {}

func (x *WrapperMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WrapperMessage.ProtoReflect.Descriptor instead.
func (*WrapperMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

func (x *WrapperMessage) GetMessageType() MessageType {
	if x != nil {
		return x.MessageType
	}
	return MessageType_SERVER_CONNECTION_SUCCESS
}

func (m *WrapperMessage) GetMessage() isWrapperMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *WrapperMessage) GetServerSuccess() *ServerConnectionSuccessMessage {
	if x, ok := x.GetMessage().(*WrapperMessage_ServerSuccess); ok {
		return x.ServerSuccess
	}
	return nil
}

func (x *WrapperMessage) GetRoomSuccess() *RoomConnectionSuccessMessage {
	if x, ok := x.GetMessage().(*WrapperMessage_RoomSuccess); ok {
		return x.RoomSuccess
	}
	return nil
}

func (x *WrapperMessage) GetChat() *ChatMessage {
	if x, ok := x.GetMessage().(*WrapperMessage_Chat); ok {
		return x.Chat
	}
	return nil
}

func (x *WrapperMessage) GetGameOver() *GameOverMessage {
	if x, ok := x.GetMessage().(*WrapperMessage_GameOver); ok {
		return x.GameOver
	}
	return nil
}

func (x *WrapperMessage) GetBotOrNot() *BotOrNotMessage {
	if x, ok := x.GetMessage().(*WrapperMessage_BotOrNot); ok {
		return x.BotOrNot
	}
	return nil
}

func (x *WrapperMessage) GetPlayAgain() *PlayAgainMessage {
	if x, ok := x.GetMessage().(*WrapperMessage_PlayAgain); ok {
		return x.PlayAgain
	}
	return nil
}

func (x *WrapperMessage) GetAnswerCorrect() *AnswerCorrectMessage {
	if x, ok := x.GetMessage().(*WrapperMessage_AnswerCorrect); ok {
		return x.AnswerCorrect
	}
	return nil
}

type isWrapperMessage_Message interface {
	isWrapperMessage_Message()
}

type WrapperMessage_ServerSuccess struct {
	ServerSuccess *ServerConnectionSuccessMessage `protobuf:"bytes,2,opt,name=server_success,json=serverSuccess,proto3,oneof"`
}

type WrapperMessage_RoomSuccess struct {
	RoomSuccess *RoomConnectionSuccessMessage `protobuf:"bytes,3,opt,name=room_success,json=roomSuccess,proto3,oneof"`
}

type WrapperMessage_Chat struct {
	Chat *ChatMessage `protobuf:"bytes,4,opt,name=chat,proto3,oneof"`
}

type WrapperMessage_GameOver struct {
	GameOver *GameOverMessage `protobuf:"bytes,5,opt,name=game_over,json=gameOver,proto3,oneof"`
}

type WrapperMessage_BotOrNot struct {
	BotOrNot *BotOrNotMessage `protobuf:"bytes,6,opt,name=bot_or_not,json=botOrNot,proto3,oneof"`
}

type WrapperMessage_PlayAgain struct {
	PlayAgain *PlayAgainMessage `protobuf:"bytes,7,opt,name=play_again,json=playAgain,proto3,oneof"`
}

type WrapperMessage_AnswerCorrect struct {
	AnswerCorrect *AnswerCorrectMessage `protobuf:"bytes,8,opt,name=answer_correct,json=answerCorrect,proto3,oneof"`
}

func (*WrapperMessage_ServerSuccess) isWrapperMessage_Message() {}

func (*WrapperMessage_RoomSuccess) isWrapperMessage_Message() {}

func (*WrapperMessage_Chat) isWrapperMessage_Message() {}

func (*WrapperMessage_GameOver) isWrapperMessage_Message() {}

func (*WrapperMessage_BotOrNot) isWrapperMessage_Message() {}

func (*WrapperMessage_PlayAgain) isWrapperMessage_Message() {}

func (*WrapperMessage_AnswerCorrect) isWrapperMessage_Message() {}

type ServerConnectionSuccessMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WelcomeMessage string `protobuf:"bytes,1,opt,name=welcome_message,json=welcomeMessage,proto3" json:"welcome_message,omitempty"`
}

func (x *ServerConnectionSuccessMessage) Reset() {
	*x = ServerConnectionSuccessMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerConnectionSuccessMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerConnectionSuccessMessage) ProtoMessage() {}

func (x *ServerConnectionSuccessMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerConnectionSuccessMessage.ProtoReflect.Descriptor instead.
func (*ServerConnectionSuccessMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

func (x *ServerConnectionSuccessMessage) GetWelcomeMessage() string {
	if x != nil {
		return x.WelcomeMessage
	}
	return ""
}

type RoomConnectionSuccessMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId uint32 `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *RoomConnectionSuccessMessage) Reset() {
	*x = RoomConnectionSuccessMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomConnectionSuccessMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomConnectionSuccessMessage) ProtoMessage() {}

func (x *RoomConnectionSuccessMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomConnectionSuccessMessage.ProtoReflect.Descriptor instead.
func (*RoomConnectionSuccessMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{2}
}

func (x *RoomConnectionSuccessMessage) GetRoomId() uint32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

type ChatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Message  string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{3}
}

func (x *ChatMessage) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ChatMessage) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ChatMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GameOverMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GameOverMessage) Reset() {
	*x = GameOverMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameOverMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameOverMessage) ProtoMessage() {}

func (x *GameOverMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameOverMessage.ProtoReflect.Descriptor instead.
func (*GameOverMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{4}
}

type PlayAgainMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayAgain bool `protobuf:"varint,1,opt,name=play_again,json=playAgain,proto3" json:"play_again,omitempty"`
}

func (x *PlayAgainMessage) Reset() {
	*x = PlayAgainMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayAgainMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayAgainMessage) ProtoMessage() {}

func (x *PlayAgainMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayAgainMessage.ProtoReflect.Descriptor instead.
func (*PlayAgainMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{5}
}

func (x *PlayAgainMessage) GetPlayAgain() bool {
	if x != nil {
		return x.PlayAgain
	}
	return false
}

type BotOrNotMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArePlayersBots bool `protobuf:"varint,1,opt,name=are_players_bots,json=arePlayersBots,proto3" json:"are_players_bots,omitempty"`
}

func (x *BotOrNotMessage) Reset() {
	*x = BotOrNotMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotOrNotMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotOrNotMessage) ProtoMessage() {}

func (x *BotOrNotMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotOrNotMessage.ProtoReflect.Descriptor instead.
func (*BotOrNotMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{6}
}

func (x *BotOrNotMessage) GetArePlayersBots() bool {
	if x != nil {
		return x.ArePlayersBots
	}
	return false
}

type AnswerCorrectMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsCorrectAnswer bool `protobuf:"varint,1,opt,name=is_correct_answer,json=isCorrectAnswer,proto3" json:"is_correct_answer,omitempty"`
}

func (x *AnswerCorrectMessage) Reset() {
	*x = AnswerCorrectMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerCorrectMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerCorrectMessage) ProtoMessage() {}

func (x *AnswerCorrectMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerCorrectMessage.ProtoReflect.Descriptor instead.
func (*AnswerCorrectMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{7}
}

func (x *AnswerCorrectMessage) GetIsCorrectAnswer() bool {
	if x != nil {
		return x.IsCorrectAnswer
	}
	return false
}

var File_messages_proto protoreflect.FileDescriptor

var file_messages_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x95, 0x04, 0x0a, 0x0e, 0x57, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x0c,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x50, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x4a, 0x0a, 0x0c, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x12,
	0x37, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x4f, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08,
	0x67, 0x61, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x0a, 0x62, 0x6f, 0x74, 0x5f,
	0x6f, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x6f, 0x74, 0x4f, 0x72, 0x4e, 0x6f, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x62, 0x6f, 0x74, 0x4f, 0x72, 0x4e,
	0x6f, 0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x61, 0x67, 0x61, 0x69, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x67, 0x61, 0x69, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x41, 0x67, 0x61, 0x69, 0x6e, 0x12, 0x46,
	0x0a, 0x0e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x43,
	0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x49, 0x0a, 0x1e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x77, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x77, 0x65,
	0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x37, 0x0a, 0x1c,
	0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x11, 0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x31, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x67, 0x61, 0x69, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x61, 0x67, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x6c, 0x61,
	0x79, 0x41, 0x67, 0x61, 0x69, 0x6e, 0x22, 0x3b, 0x0a, 0x0f, 0x42, 0x6f, 0x74, 0x4f, 0x72, 0x4e,
	0x6f, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x72, 0x65,
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x5f, 0x62, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x42,
	0x6f, 0x74, 0x73, 0x22, 0x42, 0x0a, 0x14, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x72,
	0x72, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x69,
	0x73, 0x5f, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63,
	0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x2a, 0x96, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x45, 0x52, 0x56, 0x45,
	0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x55, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x43,
	0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x48, 0x41, 0x54, 0x10, 0x02, 0x12, 0x0d, 0x0a,
	0x09, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a,
	0x42, 0x4f, 0x54, 0x5f, 0x4f, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a,
	0x50, 0x4c, 0x41, 0x59, 0x5f, 0x41, 0x47, 0x41, 0x49, 0x4e, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e,
	0x41, 0x4e, 0x53, 0x57, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x10, 0x06,
	0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e,
	0x61, 0x64, 0x61, 0x76, 0x61, 0x73, 0x68, 0x2f, 0x62, 0x6f, 0x74, 0x2d, 0x6f, 0x72, 0x2d, 0x6e,
	0x6f, 0x74, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_messages_proto_rawDescOnce sync.Once
	file_messages_proto_rawDescData = file_messages_proto_rawDesc
)

func file_messages_proto_rawDescGZIP() []byte {
	file_messages_proto_rawDescOnce.Do(func() {
		file_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_proto_rawDescData)
	})
	return file_messages_proto_rawDescData
}

var file_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_messages_proto_goTypes = []interface{}{
	(MessageType)(0),                       // 0: message.MessageType
	(*WrapperMessage)(nil),                 // 1: message.WrapperMessage
	(*ServerConnectionSuccessMessage)(nil), // 2: message.ServerConnectionSuccessMessage
	(*RoomConnectionSuccessMessage)(nil),   // 3: message.RoomConnectionSuccessMessage
	(*ChatMessage)(nil),                    // 4: message.ChatMessage
	(*GameOverMessage)(nil),                // 5: message.GameOverMessage
	(*PlayAgainMessage)(nil),               // 6: message.PlayAgainMessage
	(*BotOrNotMessage)(nil),                // 7: message.BotOrNotMessage
	(*AnswerCorrectMessage)(nil),           // 8: message.AnswerCorrectMessage
}
var file_messages_proto_depIdxs = []int32{
	0, // 0: message.WrapperMessage.message_type:type_name -> message.MessageType
	2, // 1: message.WrapperMessage.server_success:type_name -> message.ServerConnectionSuccessMessage
	3, // 2: message.WrapperMessage.room_success:type_name -> message.RoomConnectionSuccessMessage
	4, // 3: message.WrapperMessage.chat:type_name -> message.ChatMessage
	5, // 4: message.WrapperMessage.game_over:type_name -> message.GameOverMessage
	7, // 5: message.WrapperMessage.bot_or_not:type_name -> message.BotOrNotMessage
	6, // 6: message.WrapperMessage.play_again:type_name -> message.PlayAgainMessage
	8, // 7: message.WrapperMessage.answer_correct:type_name -> message.AnswerCorrectMessage
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_messages_proto_init() }
func file_messages_proto_init() {
	if File_messages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WrapperMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerConnectionSuccessMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomConnectionSuccessMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameOverMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayAgainMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotOrNotMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerCorrectMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_messages_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*WrapperMessage_ServerSuccess)(nil),
		(*WrapperMessage_RoomSuccess)(nil),
		(*WrapperMessage_Chat)(nil),
		(*WrapperMessage_GameOver)(nil),
		(*WrapperMessage_BotOrNot)(nil),
		(*WrapperMessage_PlayAgain)(nil),
		(*WrapperMessage_AnswerCorrect)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_proto_goTypes,
		DependencyIndexes: file_messages_proto_depIdxs,
		EnumInfos:         file_messages_proto_enumTypes,
		MessageInfos:      file_messages_proto_msgTypes,
	}.Build()
	File_messages_proto = out.File
	file_messages_proto_rawDesc = nil
	file_messages_proto_goTypes = nil
	file_messages_proto_depIdxs = nil
}
